make clean -C libft/
[1;34mLibft  [1;33mCleaning Objects [0;32m[OK][0m
rm -rf ft_printf.o handlers.o parsers.o utils.o handle_int.o handle_octal.o handle_char.o handle_pointer.o handle_escape.o handle_string.o
make fclean -C libft/
[1;34mLibft  [1;33mCleaning Objects [0;32m[OK][0m
[1;34mLibft  [1;33mCleaning Lib [0;32m[OK][0m
rm -rf libftprintf.a
gcc  -Ilibft/ -c ft_printf.c
gcc  -Ilibft/ -c handlers.c
gcc  -Ilibft/ -c parsers.c
gcc  -Ilibft/ -c utils.c
gcc  -Ilibft/ -c handle_int.c
gcc  -Ilibft/ -c handle_octal.c
gcc  -Ilibft/ -c handle_char.c
gcc  -Ilibft/ -c handle_pointer.c
gcc  -Ilibft/ -c handle_escape.c
gcc  -Ilibft/ -c handle_string.c
make -C libft/
[1;34mLibft  [1;33mCompilation  [0;32m[OK][0m
ar rc libftprintf.a ft_printf.o handlers.o parsers.o utils.o handle_int.o handle_octal.o handle_char.o handle_pointer.o handle_escape.o handle_string.o ./libft/*.o
FAILED TESTS:

# TEST NUMBER (TYPE OF ARG)
  INSTRUCTION();
  1. your function ft_printf
  2. unix function printf
     (returned value) -->written on stdout<--

# 0016 (int)
  ft_printf("%x", -42);
  1. (    3) -->-2a<--
  2. (    8) -->ffffffd6<--

# 0017 (int)
  ft_printf("%X", -42);
  1. (    3) -->-2A<--
  2. (    8) -->FFFFFFD6<--

# 0029 (int)
  ft_printf("%jx", -4294967296);
  1. (   10) -->-100000000<--
  2. (   16) -->ffffffff00000000<--

# 0030 (int)
  ft_printf("%jx", -4294967297);
  1. (   10) -->-100000001<--
  2. (   16) -->fffffffeffffffff<--

# 0046 (int)
  ft_printf("@moulitest: %#.x %#.0x", 0, 0);
  1. (   15) -->@moulitest: 0 0<--
  2. (   13) -->@moulitest:  <--

# 0047 (int)
  ft_printf("@moulitest: %.x %.0x", 0, 0);
  1. (   15) -->@moulitest: 0 0<--
  2. (   13) -->@moulitest:  <--

# 0048 (int)
  ft_printf("@moulitest: %5.x %5.0x", 0, 0);
  1. (   23) -->@moulitest:     0     0<--
  2. (   23) -->@moulitest:            <--

# 0093 (int)
  ft_printf("@moulitest: %.o %.0o", 0, 0);
  1. (   15) -->@moulitest: 0 0<--
  2. (   13) -->@moulitest:  <--

# 0094 (int)
  ft_printf("@moulitest: %5.o %5.0o", 0, 0);
  1. (   23) -->@moulitest:     0     0<--
  2. (   23) -->@moulitest:            <--

# 0153 (ssize_t)
  ft_printf("%zd", 4294967295);
  1. (    1) -->d<--
  2. (   10) -->4294967295<--

# 0154 (ssize_t)
  ft_printf("%zd", 4294967296);
  1. (    1) -->d<--
  2. (   10) -->4294967296<--

# 0155 (ssize_t)
  ft_printf("%zd", -0);
  1. (    1) -->d<--
  2. (    1) -->0<--

# 0156 (ssize_t)
  ft_printf("%zd", -1);
  1. (    1) -->d<--
  2. (    2) -->-1<--

# 0175 (int)
  ft_printf("@moulitest: %.d %.0d", 0, 0);
  1. (   15) -->@moulitest: 0 0<--
  2. (   13) -->@moulitest:  <--

# 0176 (int)
  ft_printf("@moulitest: %5.d %5.0d", 0, 0);
  1. (   23) -->@moulitest:     0     0<--
  2. (   23) -->@moulitest:            <--

# 0190 (unsigned long)
  ft_printf("%lu", -42);
  1. (    3) -->-42<--
  2. (   20) -->18446744073709551574<--

# 0194 (unsigned long)
  ft_printf("%U", 4294967295);
  1. (    0) --><--
  2. (   10) -->4294967295<--

# 0195 (unsigned long)
  ft_printf("%hU", 4294967296);
  1. (    0) --><--
  2. (   10) -->4294967296<--

# 0196 (unsigned long)
  ft_printf("%U", 4294967296);
  1. (    0) --><--
  2. (   10) -->4294967296<--

--------------
*/
SUCCESS TESTS:


  16. FAIL ft_printf("%x", -42);                         -> "ffffffd6"
  17. FAIL ft_printf("%X", -42);                         -> "FFFFFFD6"
  46. FAIL ft_printf("@moulitest: %#.x %#.0x", 0, 0);    -> "@moulitest:  "
  47. FAIL ft_printf("@moulitest: %.x %.0x", 0, 0);      -> "@moulitest:  "
  48. FAIL ft_printf("@moulitest: %5.x %5.0x", 0, 0);    -> "@moulitest:            "
  93. FAIL ft_printf("@moulitest: %.o %.0o", 0, 0);      -> "@moulitest:  "
  94. FAIL ft_printf("@moulitest: %5.o %5.0o", 0, 0);    -> "@moulitest:            "
 175. FAIL ft_printf("@moulitest: %.d %.0d", 0, 0);      -> "@moulitest:  "
 176. FAIL ft_printf("@moulitest: %5.d %5.0d", 0, 0);    -> "@moulitest:            "
 190. FAIL ft_printf("%lu", -42);                        -> "18446744073709551574"
 197.      ft_printf("@moulitest: %.5u", 42);            -> "@moulitest: 00042"
